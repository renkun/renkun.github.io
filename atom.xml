<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kun Ren</title>
  
  <subtitle>只谈风月</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kun.ren/"/>
  <updated>2020-03-02T18:08:59.873Z</updated>
  <id>https://kun.ren/</id>
  
  <author>
    <name>Kun Ren</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>假装下江南</title>
    <link href="https://kun.ren/2020/03/03/%E5%81%87%E8%A3%85%E4%B8%8B%E6%B1%9F%E5%8D%97/"/>
    <id>https://kun.ren/2020/03/03/%E5%81%87%E8%A3%85%E4%B8%8B%E6%B1%9F%E5%8D%97/</id>
    <published>2020-03-02T17:59:17.000Z</published>
    <updated>2020-03-02T18:08:59.873Z</updated>
    
    <content type="html"><![CDATA[<p>天翻地覆慨而慷，<br>整天在家憋得慌。<br>春来江水绿如蓝，<br>假装下江南。</p><p><img src="/images/pasted-1.png" alt="upload successful"></p><p><img src="/images/pasted-2.png" alt="upload successful"></p><p><img src="/images/pasted-3.png" alt="upload successful"></p><p><img src="/images/pasted-4.png" alt="upload successful"></p><p><img src="/images/pasted-5.png" alt="upload successful"></p><p><img src="/images/pasted-6.png" alt="upload successful"></p><p><img src="/images/pasted-7.png" alt="upload successful"></p><p><img src="/images/pasted-8.png" alt="upload successful"></p><p><img src="/images/pasted-9.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天翻地覆慨而慷，&lt;br&gt;整天在家憋得慌。&lt;br&gt;春来江水绿如蓝，&lt;br&gt;假装下江南。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-1.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-2.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-3.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-4.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-5.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-6.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-7.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-8.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pasted-9.png&quot; alt=&quot;upload successful&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>使用JS收发BLE蓝牙串口数据</title>
    <link href="https://kun.ren/2020/03/03/send-receive-ble-serial-data-in-javascript/"/>
    <id>https://kun.ren/2020/03/03/send-receive-ble-serial-data-in-javascript/</id>
    <published>2020-03-02T17:26:51.000Z</published>
    <updated>2020-03-02T17:41:33.182Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h2><p>使用BLE的透传方式通过手机端收发数据。协议定义的是AT指令。本文主要是来阐述下怎么进行数据转换，并且发送出去。</p><h2 id="Data-Progress-for-Sending"><a href="#Data-Progress-for-Sending" class="headerlink" title="Data Progress for Sending"></a>Data Progress for Sending</h2><p>命令内容本身是字符串，如：<code>AT+STATUS?</code>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> command = <span class="string">'AT+STATUS'</span>;</span><br></pre></td></tr></table></figure><p>发送命令需要以换行符结尾，根据设备确定，一般是以<code>\r\n</code>结尾。需要在命令后加上。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> suffix = <span class="string">"\r\n"</span>;</span><br><span class="line"><span class="keyword">let</span> sendData = command + suffix;</span><br></pre></td></tr></table></figure><p>生成一个和命令长度一样的的数组buffer，转换成DataView。然后针对每一个字符转换成uint8（类似C中的unsinged char）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> buffer = <span class="keyword">new</span> <span class="built_in">ArrayBuffer</span>(sendData.length);</span><br><span class="line"><span class="keyword">let</span> dataView = <span class="keyword">new</span> <span class="built_in">DataView</span>(buffer);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; sendData.length; i++) &#123;</span><br><span class="line">  dataView.setUint8(i, sendData.charAt(i).charCodeAt());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后使用writeBLECharacteristicValue将buffer发送出去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">writeBLECharacteristicValue(&#123;</span><br><span class="line">    <span class="comment">// 这里的 deviceId 需要已经通过 createBLEConnection 与对应设备建立链接</span></span><br><span class="line">    deviceId,</span><br><span class="line">    <span class="comment">// 这里的 serviceId 需要在 getBLEDeviceServices 接口中获取</span></span><br><span class="line">    serviceId,</span><br><span class="line">    <span class="comment">// 这里的 characteristicId 需要在 getBLEDeviceCharacteristics 接口中获取</span></span><br><span class="line">    characteristicId,</span><br><span class="line">    value: buffer,<span class="comment">// hexStringToArrayBuffer('123456'),</span></span><br><span class="line">    success: <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'写入设备数据值成功'</span>);</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">      <span class="comment">// 启用通知接口，以便收到设备推送数据</span></span><br><span class="line">      <span class="keyword">this</span>.notifyBLECharacteristicValueChange();</span><br><span class="line">      resolve(res);</span><br><span class="line">    &#125;,</span><br><span class="line">    fail(e) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'写入设备数据值失败，错误码：'</span> + e.errCode);</span><br><span class="line">      <span class="keyword">if</span> (e.errCode !== <span class="number">0</span>) &#123;</span><br><span class="line">        toast(<span class="string">"ERROR CODE:"</span> + e.errCode);</span><br><span class="line">      &#125;</span><br><span class="line">      reject(e.errCode);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Receiving-data"><a href="#Receiving-data" class="headerlink" title="Receiving data"></a>Receiving data</h2><p>BLE收到数据是在<code>onBLECharacteristicValueChange</code>收到的。但是每收到一个字符就会被通知一次。</p><p>收到的命令都是预先定义好的，一般都是以<code>\r\n</code>结尾。故以此作为收到一条完整命令结束的依据。</p><p> this.received 作为收到数据的暂存包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">onBLECharacteristicValueChange(<span class="function"><span class="params">characteristic</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// 将收到的字符暂存</span></span><br><span class="line">  <span class="keyword">this</span>.received += ab2str(characteristic.value);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(characteristic));</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(<span class="keyword">this</span>.received));</span><br><span class="line">  <span class="comment">// 在另外一个函数里单独处理</span></span><br><span class="line">  <span class="keyword">this</span>.onReceivedChar();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在类中定义接收处理方法如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// this.receiveSuffix = "\r\n";</span></span><br><span class="line">onReceivedChar() &#123;</span><br><span class="line">  <span class="keyword">let</span> len = <span class="keyword">this</span>.receiveSuffix.length;</span><br><span class="line">  <span class="keyword">if</span>(<span class="keyword">this</span>.received.substr(<span class="number">0</span> - len) === <span class="keyword">this</span>.receiveSuffix) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'RECV:'</span> + <span class="keyword">this</span>.received);</span><br><span class="line">    <span class="keyword">let</span> command = <span class="keyword">this</span>.received.substr(<span class="number">0</span>, <span class="keyword">this</span>.received.length - len);</span><br><span class="line">    <span class="keyword">this</span>.$emit(<span class="string">'receive'</span>, command);</span><br><span class="line">    <span class="keyword">this</span>.received = <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>这样在外层收到receive事件时候就是一条完整返回结果</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">onReceive(res) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(res));</span><br><span class="line">  <span class="keyword">let</span> isOK = res.substr(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">let</span> pos = res.indexOf(<span class="string">':'</span>);</span><br><span class="line">  <span class="keyword">if</span> (isOK === <span class="string">"OK"</span> &amp;&amp; pos &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> type = res.substring(<span class="number">3</span>, pos);</span><br><span class="line">    <span class="keyword">let</span> params = res.substr(pos + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">let</span> func = <span class="string">"onGet"</span> + type;</span><br><span class="line">    <span class="keyword">this</span>[func](params);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">onGetSTATUS(params) &#123;</span><br><span class="line">  <span class="keyword">let</span> values = params.split(<span class="string">','</span>);</span><br><span class="line">  <span class="keyword">this</span>.powerPercent = values[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">this</span>.temperatura = values[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">this</span>.isActive = (values.length &lt; <span class="number">3</span> || values[<span class="number">2</span>] == <span class="string">'0'</span>) ? <span class="literal">false</span> : <span class="literal">true</span>;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>数据解析完毕，可以按照常规变量使用</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Summary&quot;&gt;&lt;a href=&quot;#Summary&quot; class=&quot;headerlink&quot; title=&quot;Summary&quot;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;使用BLE的透传方式通过手机端收发数据。协议定义的是AT指令。本文主要是来阐述下怎么进行数据转换，并且发送出去。&lt;/p&gt;
&lt;h2 id=&quot;Data-Progress-for-Sending&quot;&gt;&lt;a href=&quot;#Data-Progress-for-Sending&quot; class=&quot;headerlink&quot; title=&quot;Data Progress for Sending&quot;&gt;&lt;/a&gt;Data Progress for Sending&lt;/h2&gt;&lt;p&gt;命令内容本身是字符串，如：&lt;code&gt;AT+STATUS?&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; command = &lt;span class=&quot;string&quot;&gt;&#39;AT+STATUS&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;发送命令需要以换行符结尾，根据设备确定，一般是以&lt;code&gt;\r\n&lt;/code&gt;结尾。需要在命令后加上。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; suffix = &lt;span class=&quot;string&quot;&gt;&quot;\r\n&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sendData = command + suffix;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;生成一个和命令长度一样的的数组buffer，转换成DataView。然后针对每一个字符转换成uint8（类似C中的unsinged char）&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;ArrayBuffer&lt;/span&gt;(sendData.length);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; dataView = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;DataView&lt;/span&gt;(buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; sendData.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataView.setUint8(i, sendData.charAt(i).charCodeAt());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;然后使用writeBLECharacteristicValue将buffer发送出去&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>解决Ubuntu下磁盘无法写入问题</title>
    <link href="https://kun.ren/2020/02/27/%E8%A7%A3%E5%86%B3Ubuntu%E4%B8%8B%E7%A3%81%E7%9B%98%E6%97%A0%E6%B3%95%E5%86%99%E5%85%A5%E9%97%AE%E9%A2%98/"/>
    <id>https://kun.ren/2020/02/27/%E8%A7%A3%E5%86%B3Ubuntu%E4%B8%8B%E7%A3%81%E7%9B%98%E6%97%A0%E6%B3%95%E5%86%99%E5%85%A5%E9%97%AE%E9%A2%98/</id>
    <published>2020-02-27T06:57:27.000Z</published>
    <updated>2020-03-02T17:42:29.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="症状"><a href="#症状" class="headerlink" title="症状"></a>症状</h2><p>服务器上运行的程序报错，查询运行日志提示写入磁盘失败。<br>删除了一些日志、临时文件等，短时间运行成功，但是过一阵子又出问题了。</p><h2 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h2><p>运行df命令发现磁盘占用不多，很奇怪。。。折腾好久。。。只能临时不定时删除一些文件<br>搜索时候，有人提到磁盘满，一个是磁盘空间慢，一个是磁盘inodes索引满。<br><strong>运行命令</strong> <code>df -i</code> <strong>果然发现inodes占用100%</strong></p><p>如下是结局问题记录：</p><ol><li><p>感觉是哪个程序运行产生日志或者临时文件比较多，所以需要去找到底哪里文件比较多</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> i <span class="keyword">in</span> /*; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;sudo find <span class="variable">$i</span> | wc -l; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure></li><li><p>发现/var目录下100多万个文件，找下一个多的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> i <span class="keyword">in</span> /var/*; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;sudo find <span class="variable">$i</span> | wc -l; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure></li><li><p>发现spool目录下文件多</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> i <span class="keyword">in</span> /var/spool/*; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;sudo find <span class="variable">$i</span> | wc -l; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure></li><li><p>发现postfix下文件多，然后一看就知道是postfix搞得鬼，defer, deferred, maildrop下 100多万文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> i <span class="keyword">in</span> /var/spool/postfix/*; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;sudo find <span class="variable">$i</span> | wc -l; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure></li><li><p>先删除这些文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo find /var/spool/postfix/defer/ -<span class="built_in">type</span> f |xargs sudo rm -rf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo find /var/spool/postfix/deferred/ -<span class="built_in">type</span> f |xargs sudo rm -rf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo find /var/spool/postfix/maildrop/ -<span class="built_in">type</span> f |xargs sudo rm -rf</span></span><br></pre></td></tr></table></figure></li></ol><p>或者直接删除目录, 删除之前需要停止postfix</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo service postfix stop </span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo rm -rf /var/spool/postfix/defer</span></span><br></pre></td></tr></table></figure><p>再运行发现文件减少了很多</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">for</span> i <span class="keyword">in</span> /var/spool/postfix/*; <span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$i</span>;sudo find <span class="variable">$i</span> | wc -l; <span class="keyword">done</span></span></span><br></pre></td></tr></table></figure><h2 id="解决根源问题"><a href="#解决根源问题" class="headerlink" title="解决根源问题"></a>解决根源问题</h2><p>到底是哪里的问题产生的文件呢？？？网上一般说是和crontab有关</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vi /etc/crontab</span></span><br></pre></td></tr></table></figure><p>是系统默认的，无异议。<br>运行ubuntu 帐号下的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> crontab -e</span></span><br></pre></td></tr></table></figure><p>发现了很多bash命令，没有输出，造成了很多mail输出问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /home/ubuntu/vr/bin/kill_closeWait.sh</span><br></pre></td></tr></table></figure><p>应该是</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * * * /home/ubuntu/vr/bin/kill_closeWait.sh &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;症状&quot;&gt;&lt;a href=&quot;#症状&quot; class=&quot;headerlink&quot; title=&quot;症状&quot;&gt;&lt;/a&gt;症状&lt;/h2&gt;&lt;p&gt;服务器上运行的程序报错，查询运行日志提示写入磁盘失败。&lt;br&gt;删除了一些日志、临时文件等，短时间运行成功，但是过一阵子又出问题了。&lt;/p&gt;
&lt;h2 id=&quot;排查过程&quot;&gt;&lt;a href=&quot;#排查过程&quot; class=&quot;headerlink&quot; title=&quot;排查过程&quot;&gt;&lt;/a&gt;排查过程&lt;/h2&gt;&lt;p&gt;运行df命令发现磁盘占用不多，很奇怪。。。折腾好久。。。只能临时不定时删除一些文件&lt;br&gt;搜索时候，有人提到磁盘满，一个是磁盘空间慢，一个是磁盘inodes索引满。&lt;br&gt;&lt;strong&gt;运行命令&lt;/strong&gt; &lt;code&gt;df -i&lt;/code&gt; &lt;strong&gt;果然发现inodes占用100%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如下是结局问题记录：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;感觉是哪个程序运行产生日志或者临时文件比较多，所以需要去找到底哪里文件比较多&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /*; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;sudo find &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; | wc -l; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现/var目录下100多万个文件，找下一个多的目录&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /var/*; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;sudo find &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; | wc -l; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现spool目录下文件多&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /var/spool/*; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;sudo find &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; | wc -l; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;发现postfix下文件多，然后一看就知道是postfix搞得鬼，defer, deferred, maildrop下 100多万文件。&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /var/spool/postfix/*; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;sudo find &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; | wc -l; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;先删除这些文件&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; sudo find /var/spool/postfix/defer/ -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; f |xargs sudo rm -rf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; sudo find /var/spool/postfix/deferred/ -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; f |xargs sudo rm -rf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; sudo find /var/spool/postfix/maildrop/ -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; f |xargs sudo rm -rf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者直接删除目录, 删除之前需要停止postfix&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; sudo service postfix stop &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; sudo rm -rf /var/spool/postfix/defer&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;再运行发现文件减少了很多&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; /var/spool/postfix/*; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt;;sudo find &lt;span class=&quot;variable&quot;&gt;$i&lt;/span&gt; | wc -l; &lt;span class=&quot;keyword&quot;&gt;done&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://kun.ren/2020/02/26/hello-world/"/>
    <id>https://kun.ren/2020/02/26/hello-world/</id>
    <published>2020-02-25T16:33:26.000Z</published>
    <updated>2020-02-25T17:36:46.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二月初三：晴而无云"><a href="#二月初三：晴而无云" class="headerlink" title="二月初三：晴而无云"></a>二月初三：晴而无云</h1><p>天略热燥，须再松动琴弦。然一曲未完，便有电话呼唤。须臾之间，又有消息若干。一日下来，代码未几，文档亦未成篇。正月已过，恍然思绪万千。消逝年华，回首徒留遗憾。</p><p>万里悲秋常作客，沧桑浮云一瞬间。决计写些什么，聊以慰藉惨淡人生。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;二月初三：晴而无云&quot;&gt;&lt;a href=&quot;#二月初三：晴而无云&quot; class=&quot;headerlink&quot; title=&quot;二月初三：晴而无云&quot;&gt;&lt;/a&gt;二月初三：晴而无云&lt;/h1&gt;&lt;p&gt;天略热燥，须再松动琴弦。然一曲未完，便有电话呼唤。须臾之间，又有消息若干。一日下来，代码未几，文档亦未成篇。正月已过，恍然思绪万千。消逝年华，回首徒留遗憾。&lt;/p&gt;
&lt;p&gt;万里悲秋常作客，沧桑浮云一瞬间。决计写些什么，聊以慰藉惨淡人生。&lt;/p&gt;

    
    </summary>
    
    
    
  </entry>
  
</feed>
